c = 843044897663847841476319711639772861390329326681532977209935413827620909782846667
n = 1422450808944701344261903748621562998784243662042303391362692043823716783771691667
e = 65537

phi = 1422450808944701344261903748621562998783582944057933890341955406374353056752914016
d = 975120122884150896343356420256053234758228648361853546720066993334766006694511009

# (d * e) % phi(n) = 1
# res = (c ^ d) % n

def egcd(a,b):
    if a == 0:
        return (b, 0 , 1)
    else:
        g, y, x = egcd(b % a, a)
        return (g, x - (b // a)*y, y)

def modinv(a, m):
    g, x, y = egcd(a,m)
    if g != 1:
        raise Exception('failed')
    else:
        return x % m

d = modinv(e, phi)
st = pow(c, d, n)

print(bytearray.fromhex(hex(st)[2:]).decode())